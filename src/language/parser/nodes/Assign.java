
package language.parser.nodes;

import language.parser.Visitor;


/**
 * This class was generated by the LRPaGe parser generator v1.0 using the com.sun.codemodel library.
 * 
 * <P>LRPaGe is available from https://github.com/tbepler/LRPaGe.
 * <P>CodeModel is available from https://codemodel.java.net/.
 * 
 */
public class Assign
    extends assignAbstractNode
{

    public final idlistAbstractNode idlist0;
    public final expAbstractNode exp1;

    public Assign(_Punctuation5Token _punctuation50, idlistAbstractNode idlist1, _Punctuation6Token _punctuation62, expAbstractNode exp3) {
        this.idlist0 = idlist1;
        this.exp1 = exp3;
    }

    @Override
    public int getLine() {
        return idlist0 .getLine();
    }

    @Override
    public int getPos() {
        return idlist0 .getPos();
    }

    @Override
    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = ((hash* 13)+ idlist0 .hashCode());
        hash = ((hash* 13)+ exp1 .hashCode());
        hash = ((hash* 13)+ getClass().hashCode());
        return hash;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (null == o) {
            return false;
        }
        if (!(o instanceof Assign)) {
            return false;
        }
        Assign castResult = ((Assign) o);
        if (!this.idlist0 .equals(castResult.idlist0)) {
            return false;
        }
        if (!this.exp1 .equals(castResult.exp1)) {
            return false;
        }
        return true;
    }

}
